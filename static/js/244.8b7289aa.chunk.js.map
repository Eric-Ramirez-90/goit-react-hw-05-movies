{"version":3,"file":"static/js/244.8b7289aa.chunk.js","mappings":"ySAEMA,E,QAAQC,EAAAA,OAAa,CACzBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIRC,EAAmB,mCAAG,WAAMC,GAAN,2FACHP,EAAMQ,IAAI,qBAAsB,CAAED,OAAAA,IAD/B,uBAClBE,EADkB,EAClBA,KACFC,EAAYD,EAAKE,QAFG,kBAInBD,GAJmB,2CAAH,sDAOnBE,EAAc,mCAAG,WAAOC,EAAIN,GAAX,yFACEP,EAAMQ,IAAN,gBAAmBK,GAAM,CAAEN,OAAAA,IAD7B,uBACbE,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,wDAMdK,EAAwB,mCAAG,WAAMC,GAAN,2FACRf,EAAMQ,IAAN,6BAAgCO,IADxB,uBACvBN,EADuB,EACvBA,KAEFO,EAAaP,EAAKE,QAHO,kBAKxBK,GALwB,2CAAH,sDAQxBC,EAAkB,mCAAG,WAAOJ,EAAIN,GAAX,yFACFP,EAAMQ,IAAN,gBAAmBK,EAAnB,YAAiC,CAAEN,OAAAA,IADjC,uBACjBE,EADiB,EACjBA,KADiB,kBAGlBA,GAHkB,2CAAH,wDAMlBS,EAAsB,mCAAG,WAAOL,EAAIN,GAAX,yFACNP,EAAMQ,IAAN,gBAAmBK,EAAnB,YAAiC,CAAEN,OAAAA,IAD7B,uBACrBE,EADqB,EACrBA,KADqB,kBAGtBA,EAAKE,SAHiB,2CAAH,uD,gFCnCfQ,E,QAAYC,EAAAA,IAAH,8F,SCStB,EARe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CAAiBE,OAAO,MAAMC,MAAM,SAGzC,C,sMCPYH,EAAYC,EAAAA,EAAAA,IAAH,gEAKTG,EAAOH,EAAAA,EAAAA,GAAH,mFAMJI,EAAOJ,EAAAA,EAAAA,GAAH,6LAOJK,EAAQL,EAAAA,EAAAA,GAAH,gD,SC+ClB,EA3DgB,WACd,OAAwCM,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkCR,OAhCAE,EAAAA,EAAAA,YAAU,WACRL,EAAUF,EAAAA,EAAAA,SAEV,IAAMQ,EAAa,IAAIC,gBACjB/B,EAAS8B,EAAW9B,OAEpBgC,EAAe,mCAAG,8GAEErB,EAAAA,EAAAA,IAAuBgB,EAAS3B,GAFlC,QAEdI,EAFc,QAIP6B,SACXC,EAAAA,GAAAA,KAAW,yBACXV,EAAUF,EAAAA,EAAAA,OAGZD,EAAgBjB,GAChBoB,EAAUF,EAAAA,EAAAA,UAVU,mDAYD,kBAAf,KAAMa,KAZU,mDAcpBT,EAAS,oCACTF,EAAUF,EAAAA,EAAAA,UAfU,yDAAH,qDAqBrB,OAFAU,IAEO,WACLF,EAAWM,OACZ,CACF,GAAE,CAACT,KAGF,UAACf,EAAD,WACGW,IAAWD,EAAAA,EAAAA,UAAkB,SAACe,EAAA,EAAD,IAAY,IACzCd,IAAWD,EAAAA,EAAAA,WAAmB,yBAAMG,IACpCF,IAAWD,EAAAA,EAAAA,WACV,+BACE,SAACN,EAAD,UACGI,EAAakB,KAAI,gBAAGhC,EAAH,EAAGA,GAAIiC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,UAACvB,EAAD,YACE,UAACC,EAAD,sBAAgBqB,MAChB,kCAAUC,OAFDlC,EADK,UAW7B,C,uDCjEM,IAAMgB,EAAS,CACpBmB,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W","sources":["components/Api-services/Api-services.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","constants/status.js"],"sourcesContent":["import axios from 'axios';\n\nconst Axios = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '67e5eabdd9e623c9f4d5d7c80743e2e5',\n    language: 'en-US',\n  },\n});\n\nconst fetchTrendingMovies = async signal => {\n  const { data } = await Axios.get('trending/movie/day', { signal });\n  const dayTrands = data.results;\n\n  return dayTrands;\n};\n\nconst fetchMovieById = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesBySearchQuery = async searchQuery => {\n  const { data } = await Axios.get(`search/movie?query=${searchQuery}`);\n\n  const moviesList = data.results;\n\n  return moviesList;\n};\n\nconst fetchMovieCastInfo = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}/credits`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesReviewsInfo = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}/reviews`, { signal });\n\n  return data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieById,\n  fetchMoviesBySearchQuery,\n  fetchMovieCastInfo,\n  fetchMoviesReviewsInfo,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <MagnifyingGlass height=\"100\" width=\"100\" />\n    </Container>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  padding: 15px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMoviesReviewsInfo } from 'components/Api-services/Api-services';\nimport { Status } from '../../constants/status';\nimport Loader from 'components/Loader';\nimport { Container, List, Title, Item } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setmovieReviews] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const getMovieReviews = async () => {\n      try {\n        const results = await fetchMoviesReviewsInfo(movieId, signal);\n\n        if (!results.length) {\n          toast.info('No reviews were found');\n          setStatus(Status.IDLE);\n        }\n\n        setmovieReviews(results);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n\n        setError('Something went wrong. Try again.');\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    getMovieReviews();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Container>\n      {status === Status.PENDING && <Loader />}{' '}\n      {status === Status.REJECTED && <div>{error}</div>}\n      {status === Status.RESOLVED && (\n        <>\n          <List>\n            {movieReviews.map(({ id, author, content }) => (\n              <Item key={id}>\n                <Title>Author: {author}</Title>\n                <p>&emsp;{content}</p>\n              </Item>\n            ))}\n          </List>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["Axios","axios","baseURL","params","api_key","language","fetchTrendingMovies","signal","get","data","dayTrands","results","fetchMovieById","id","fetchMoviesBySearchQuery","searchQuery","moviesList","fetchMovieCastInfo","fetchMoviesReviewsInfo","Container","styled","height","width","List","Item","Title","useState","movieReviews","setmovieReviews","Status","status","setStatus","error","setError","movieId","useParams","useEffect","controller","AbortController","getMovieReviews","length","toast","name","abort","Loader","map","author","content","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}