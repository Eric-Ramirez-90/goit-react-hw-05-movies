{"version":3,"file":"static/js/415.ddb6433c.chunk.js","mappings":"ySAEMA,E,QAAQC,EAAAA,OAAa,CACzBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIRC,EAAmB,mCAAG,WAAMC,GAAN,2FACHP,EAAMQ,IAAI,qBAAsB,CAAED,OAAAA,IAD/B,uBAClBE,EADkB,EAClBA,KACFC,EAAYD,EAAKE,QAFG,kBAInBD,GAJmB,2CAAH,sDAOnBE,EAAc,mCAAG,WAAOC,EAAIN,GAAX,yFACEP,EAAMQ,IAAN,gBAAmBK,GAAM,CAAEN,OAAAA,IAD7B,uBACbE,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,wDAMdK,EAAwB,mCAAG,WAAMC,GAAN,2FACRf,EAAMQ,IAAN,6BAAgCO,IADxB,uBACvBN,EADuB,EACvBA,KAEFO,EAAaP,EAAKE,QAHO,kBAKxBK,GALwB,2CAAH,sDAQxBC,EAAkB,mCAAG,WAAOJ,EAAIN,GAAX,yFACFP,EAAMQ,IAAN,gBAAmBK,EAAnB,YAAiC,CAAEN,OAAAA,IADjC,uBACjBE,EADiB,EACjBA,KADiB,kBAGlBA,GAHkB,2CAAH,wDAMlBS,EAAsB,mCAAG,WAAOL,EAAIN,GAAX,yFACNP,EAAMQ,IAAN,gBAAmBK,EAAnB,YAAiC,CAAEN,OAAAA,IAD7B,uBACrBE,EADqB,EACrBA,KADqB,kBAGtBA,EAAKE,SAHiB,2CAAH,uD,8GCnCfQ,EAAYC,EAAAA,EAAAA,IAAH,qEAKTC,EAAMD,EAAAA,EAAAA,IAAH,kFAMHE,EAAQF,EAAAA,EAAAA,GAAH,6D,SCQlB,EAjBkB,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC1B,OACE,UAACL,EAAD,YACE,SAACE,EAAD,CACEI,IAAKD,EAAM,yCAAqCA,GAAWE,EAC3DC,IAAKJ,KAEP,SAACD,EAAD,UAAQC,MAGb,E,UCXYK,EAAOR,EAAAA,EAAAA,GAAH,wGAOJS,EAAOT,EAAAA,EAAAA,GAAH,wKAQJU,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,8GCavB,EA1BmB,SAAC,GAAgB,IAAdY,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGtB,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAOa,EAAd,EAAcA,YAAd,OACV,SAACP,EAAD,WACE,SAACC,EAAD,CAAYO,GAAE,kBAAaxB,GAAMyB,MAAO,CAAEC,KAAMN,GAAhD,UACE,SAAC,EAAD,CAAWV,MAAOA,EAAOC,OAAQY,OAF1BvB,EADD,KASjB,C,uDCnBM,IAAM2B,EAAS,CACpBC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W,mICsDZ,UApDa,WACX,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,UAASL,EAAAA,EAAAA,MAArC,eAAOQ,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA8BA,OA5BAC,EAAAA,EAAAA,YAAU,WACRH,EAAUT,EAAAA,EAAAA,SAEV,IAAMa,EAAa,IAAIC,gBACjB/C,EAAS8C,EAAW9C,OAEpBgD,EAAW,mCAAG,8GAEKjD,EAAAA,EAAAA,IAAoBC,GAFzB,OAEVyB,EAFU,OAIhBe,EAAYf,GACZiB,EAAUT,EAAAA,EAAAA,UALM,mDAOhBS,EAAUT,EAAAA,EAAAA,UACS,kBAAf,KAAMgB,KARM,mDAUhBL,EAAS,oCACTF,EAAUT,EAAAA,EAAAA,UAXM,yDAAH,qDAiBjB,OAFAe,IAEO,WACLF,EAAWI,OACZ,CACF,GAAE,KAGD,2BACE,4BACE,eACEC,MAAO,CACLC,UAAW,SACXC,aAAc,IAHlB,4BAQCZ,IAAWR,EAAAA,EAAAA,UAAkB,SAAC,IAAD,IAC7BQ,IAAWR,EAAAA,EAAAA,WAAmB,SAAC,IAAD,CAAYR,OAAQc,IAClDE,IAAWR,EAAAA,EAAAA,WAAmB,yBAAMU,QAI5C,C","sources":["components/Api-services/Api-services.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","constants/status.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst Axios = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '67e5eabdd9e623c9f4d5d7c80743e2e5',\n    language: 'en-US',\n  },\n});\n\nconst fetchTrendingMovies = async signal => {\n  const { data } = await Axios.get('trending/movie/day', { signal });\n  const dayTrands = data.results;\n\n  return dayTrands;\n};\n\nconst fetchMovieById = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesBySearchQuery = async searchQuery => {\n  const { data } = await Axios.get(`search/movie?query=${searchQuery}`);\n\n  const moviesList = data.results;\n\n  return moviesList;\n};\n\nconst fetchMovieCastInfo = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}/credits`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesReviewsInfo = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}/reviews`, { signal });\n\n  return data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieById,\n  fetchMoviesBySearchQuery,\n  fetchMovieCastInfo,\n  fetchMoviesReviewsInfo,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Img = styled.img`\n  width: 150px;\n  height: 150px;\n  margin-bottom: 5px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 10px;\n  padding: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport noImage from '../../images/noImages.jpg';\nimport { Container, Img, Title } from './MovieItem.styled';\n\nconst MovieItem = ({ title, poster }) => {\n  return (\n    <Container>\n      <Img\n        src={poster ? `https://image.tmdb.org/t/p/w500${poster}` : noImage}\n        alt={title}\n      />\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n};\n\nexport default MovieItem;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  width: 100px;\n\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n\n  text-decoration: none;\n  color: black;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem';\nimport { StyledLink, List, Item } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <MovieItem title={title} poster={poster_path} />\n          </StyledLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import { useState, useEffect } from 'react';\nimport { Status } from '../constants/status';\nimport { fetchTrendingMovies } from '../components/Api-services/Api-services';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\n\nconst Home = () => {\n  const [trending, setTrending] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchMovies = async () => {\n      try {\n        const movies = await fetchTrendingMovies(signal);\n\n        setTrending(movies);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        if (error.name === 'CanceledError') return;\n\n        setError('Something went wrong. Try again.');\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    fetchMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <main>\n      <div>\n        <h1\n          style={{\n            textAlign: 'center',\n            marginBottom: 30,\n          }}\n        >\n          Trending today\n        </h1>\n        {status === Status.PENDING && <Loader />}\n        {status === Status.RESOLVED && <MoviesList movies={trending} />}\n        {status === Status.REJECTED && <div>{error}</div>}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["Axios","axios","baseURL","params","api_key","language","fetchTrendingMovies","signal","get","data","dayTrands","results","fetchMovieById","id","fetchMoviesBySearchQuery","searchQuery","moviesList","fetchMovieCastInfo","fetchMoviesReviewsInfo","Container","styled","Img","Title","title","poster","src","noImage","alt","List","Item","StyledLink","NavLink","movies","location","useLocation","map","poster_path","to","state","from","Status","IDLE","PENDING","RESOLVED","REJECTED","useState","trending","setTrending","status","setStatus","error","setError","useEffect","controller","AbortController","fetchMovies","name","abort","style","textAlign","marginBottom"],"sourceRoot":""}