{"version":3,"file":"static/js/93.9e647aba.chunk.js","mappings":"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","sources":["components/Api-services/Api-services.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","constants/status.js"],"sourcesContent":["import axios from 'axios';\n\nconst Axios = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '67e5eabdd9e623c9f4d5d7c80743e2e5',\n    language: 'en-US',\n  },\n});\n\nconst fetchTrendingMovies = async signal => {\n  const { data } = await Axios.get('trending/movie/day', { signal });\n  const dayTrands = data.results;\n\n  return dayTrands;\n};\n\nconst fetchMovieById = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesBySearchQuery = async searchQuery => {\n  const { data } = await Axios.get(`search/movie?query=${searchQuery}`);\n\n  const moviesList = data.results;\n\n  return moviesList;\n};\n\nconst fetchMovieCastInfo = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}/credits`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesReviewsInfo = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}/reviews`, { signal });\n\n  return data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieById,\n  fetchMoviesBySearchQuery,\n  fetchMovieCastInfo,\n  fetchMoviesReviewsInfo,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n\n  padding: 20px;\n`;\n\nexport const Item = styled.li`\n  width: 150px;\n`;\n\nexport const Img = styled.img`\n  width: 150px;\n  height: 210px;\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.h4`\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 700;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCastInfo } from 'components/Api-services/Api-services';\nimport { Status } from '../../constants/status';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader';\nimport noImage from '../../images/noImages.jpg';\nimport { Container, List, Item, Img, Name, Text, Span } from './Cast.styled';\n\nconst Cast = () => {\n  const [actorsCast, setActorsCast] = useState({});\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const getMovieCast = async () => {\n      try {\n        const { cast } = await fetchMovieCastInfo(movieId, signal);\n\n        if (!cast.length) {\n          toast.info('No cast information found');\n          return;\n        }\n\n        setActorsCast(cast);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n\n        setError('Something went wrong. Try again.');\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    getMovieCast();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Container>\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <div>{error}</div>}\n      {status === Status.RESOLVED && (\n        <List>\n          {actorsCast.map(({ id, name, profile_path, character }) => (\n            <Item key={id}>\n              <Img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : noImage\n                }\n                alt=\"name\"\n              />\n              <Name>{name}</Name>\n              <Text>\n                <Span>Character:</Span> {character ? character : 'N/A'}\n              </Text>\n            </Item>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <MagnifyingGlass height=\"100\" width=\"100\" />\n    </Container>\n  );\n};\n\nexport default Loader;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["Axios","axios","baseURL","params","api_key","language","fetchTrendingMovies","signal","get","data","dayTrands","results","fetchMovieById","id","fetchMoviesBySearchQuery","searchQuery","moviesList","fetchMovieCastInfo","fetchMoviesReviewsInfo","Container","styled","List","Item","Img","Name","Text","Span","useState","actorsCast","setActorsCast","Status","status","setStatus","error","setError","movieId","useParams","useEffect","controller","AbortController","getMovieCast","cast","length","toast","name","abort","Loader","map","profile_path","character","src","noImage","alt","height","width","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}