{"version":3,"file":"static/js/424.f3beb908.chunk.js","mappings":"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","sources":["components/Api-services/Api-services.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","constants/status.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst Axios = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '67e5eabdd9e623c9f4d5d7c80743e2e5',\n    language: 'en-US',\n  },\n});\n\nconst fetchTrendingMovies = async signal => {\n  const { data } = await Axios.get('trending/movie/day', { signal });\n  const dayTrands = data.results;\n\n  return dayTrands;\n};\n\nconst fetchMovieById = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesBySearchQuery = async searchQuery => {\n  const { data } = await Axios.get(`search/movie?query=${searchQuery}`);\n\n  const moviesList = data.results;\n\n  return moviesList;\n};\n\nconst fetchMovieCastInfo = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}/credits`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesReviewsInfo = async (id, signal) => {\n  const { data } = await Axios.get(`movie/${id}/reviews`, { signal });\n\n  return data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieById,\n  fetchMoviesBySearchQuery,\n  fetchMovieCastInfo,\n  fetchMoviesReviewsInfo,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Img = styled.img`\n  width: 150px;\n  height: 150px;\n  margin-bottom: 5px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 10px;\n  padding: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport noImage from '../../images/noImages.jpg';\nimport { Container, Img, Title } from './MovieItem.styled';\n\nconst MovieItem = ({ title, poster }) => {\n  return (\n    <Container>\n      <Img\n        src={poster ? `https://image.tmdb.org/t/p/w500${poster}` : noImage}\n        alt={title}\n      />\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n};\n\nexport default MovieItem;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  width: 100px;\n\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n\n  text-decoration: none;\n  color: black;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem';\nimport { StyledLink, List, Item } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <MovieItem title={title} poster={poster_path} />\n          </StyledLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 300px;\n  border: 1px solid #bfbbba;\n  border-radius: 3px;\n  background-color: #fff;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 4px;\n\n  ::placeholder {\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 32px;\n  height: 32px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\nimport { Container, Form, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [inputquery, setInputQuery] = useState('');\n\n  const handleInpurChange = evt => {\n    setInputQuery(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (!inputquery.trim()) {\n      return toast.error('Please, enter a name');\n    }\n    onSubmit(inputquery);\n    reset();\n  };\n\n  const reset = () => {\n    setInputQuery('');\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Search movies\"\n          value={inputquery}\n          onChange={handleInpurChange}\n        />\n        <Button type=\"submit\">\n          <FcSearch size=\"24\" />\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchMoviesBySearchQuery } from 'components/Api-services/Api-services';\nimport { Status } from '../constants/status';\nimport SearchForm from 'components/SearchForm';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const queryName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!queryName) return;\n\n    setStatus(Status.PENDING);\n\n    const getSearchingMovies = async () => {\n      try {\n        const queryMovies = await fetchMoviesBySearchQuery(queryName);\n\n        if (queryMovies.length === 0) {\n          toast.error('Nothing Found', { theme: 'colored' });\n        }\n\n        setMovies(queryMovies);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError('Something went wrong. Try again.');\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    getSearchingMovies();\n  }, [queryName]);\n\n  const handlFormSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={handlFormSubmit} />\n      {status === Status.PENDING && <Loader />}\n      {status === Status.RESOLVED && <MoviesList movies={movies} />}\n      {status === Status.REJECTED && <div>{error}</div>}\n      <ToastContainer autoClose={3000} rtl />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Axios","axios","baseURL","params","api_key","language","fetchTrendingMovies","signal","get","data","dayTrands","results","fetchMovieById","id","fetchMoviesBySearchQuery","searchQuery","moviesList","fetchMovieCastInfo","fetchMoviesReviewsInfo","Container","styled","Img","Title","title","poster","src","noImage","alt","List","Item","StyledLink","NavLink","movies","location","useLocation","map","poster_path","to","state","from","Status","IDLE","PENDING","RESOLVED","REJECTED","Form","Input","Button","onSubmit","useState","inputquery","setInputQuery","reset","evt","preventDefault","trim","toast","type","placeholder","value","onChange","target","size","setMovies","status","setStatus","error","setError","useSearchParams","searchParams","setSearchParams","queryName","useEffect","getSearchingMovies","queryMovies","length","theme","query","Loader","MoviesList","autoClose","rtl"],"sourceRoot":""}